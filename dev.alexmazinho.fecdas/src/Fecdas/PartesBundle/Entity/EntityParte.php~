<?php
namespace Fecdas\PartesBundle\Entity;

use Doctrine\ORM\Mapping as ORM;
use Symfony\Component\Validator\Constraints as Assert;

/**
 * @ORM\Entity
 * @ORM\Table(name="m_partes")
 * 
 * @author alex
 *
 */
class EntityParte {
	
	/**
	 * @ORM\Id
	 * @ORM\Column(type="integer")
     * @ORM\GeneratedValue(strategy="AUTO")
	 */
	protected $id;	

	/**
	 * @ORM\ManyToOne(targetEntity="EntityParteType")
	 * @ORM\JoinColumn(name="tipus", referencedColumnName="id")
	 */
	protected $tipus;	// FK taula m_tipuspartes
	
	/**
	 * @ORM\ManyToOne(targetEntity="EntityClub")
	 * @ORM\JoinColumn(name="club", referencedColumnName="codi")
	 */
	protected $club;	// FK taula m_clubs
	
	/**
	 * @ORM\Column(type="integer")
	 */
	protected $numrelacio;
	
	/**
	 * @ORM\Column(type="date")
	 */
	protected $dataalta;

	/**
	 * @ORM\Column(type="datetime")
	 */
	protected $dataentrada;
	
	/**
	 * @ORM\Column(type="datetime")
	 */
	protected $datamodificacio;
	
	/**
	 * @ORM\Column(type="datetime", nullable=true)
	 */
	protected $databaixa;
	
	/**
	 * @ORM\Column(type="date", nullable = true)
	 */
	protected $datafacturacio;
	
	/**
	 * @ORM\Column(type="string", length=38, nullable=true)
	 */
	protected $idparte_access;
	
	/**
	 * @ORM\OneToMany(targetEntity="EntityLlicencia", mappedBy="parte")
	 */
	protected $llicencies;	// Owning side of the relationship
	
	public function __construct() {
		$this->setDataentrada(new \DateTime());
		$this->llicencies = new \Doctrine\Common\Collections\ArrayCollection();
	}

    /**
     * Get id
     *
     * @return integer 
     */
    public function getId()
    {
        return $this->id;
    }

    // Set Id not autogenerated
    /**
     * Set id
     *
     * @param integer $id
     */
    public function setId($id)
    {
    	$this->id = $id;
    }

    /**
     * Set numrelacio
     *
     * @param integer $numrelacio
     */
    public function setNumrelacio($numrelacio)
    {
        $this->numrelacio = $numrelacio;
    }

    /**
     * Get numrelacio
     *
     * @return integer 
     */
    public function getNumrelacio()
    {
        return $this->numrelacio;
    }

    /**
     * Set dataalta
     *
     * @param date $dataalta
     */
    public function setDataalta($dataalta)
    {
        $this->dataalta = $dataalta;
    }

    /**
     * Get dataalta
     *
     * @return date 
     */
    public function getDataalta()
    {
        return $this->dataalta;
    }

    /**
     * Get any
     *
     * @return string
     */
    public function getAny()
    {
    	return date("Y", $this->dataalta->getTimestamp());
    }

    /**
     * Is a current year Parte
     *  
     * @return boolean
     */
    public function isCurrentYear() {
    	return (date("Y", $this->dataalta->getTimestamp()) == date("Y"));
    }
    
    /**
     * Set dataentrada
     *
     * @param datetime $dataentrada
     */
    public function setDataentrada($dataentrada)
    {
        $this->dataentrada = $dataentrada;
    }

    /**
     * Get dataentrada
     *
     * @return datetime 
     */
    public function getDataentrada()
    {
        return $this->dataentrada;
    }

    /**
     * Set datafacturacio
     *
     * @param date $datafacturacio
     */
    public function setDatafacturacio($datafacturacio)
    {
        $this->datafacturacio = $datafacturacio;
    }

    /**
     * Get datafacturacio
     *
     * @return date 
     */
    public function getDatafacturacio()
    {
        return $this->datafacturacio;
    }

    /**
     * Get facturat
     *
     * @return boolean
     */
    public function isFacturat()
    {
    	return (boolean) $this->datafacturacio != null;
    }
    
    /**
     * Set idparte_access
     *
     * @param string $idparteAccess
     */
    public function setIdparteAccess($idparteAccess)
    {
        $this->idparte_access = $idparteAccess;
    }

    /**
     * Get idparte_access
     *
     * @return string 
     */
    public function getIdparteAccess()
    {
        return $this->idparte_access;
    }

    /**
     * Set tipus
     *
     * @param Fecdas\PartesBundle\Entity\EntityParteType $tipus
     */
    public function setTipus(\Fecdas\PartesBundle\Entity\EntityParteType $tipus)
    {
        $this->tipus = $tipus;
    }

    /**
     * Get tipus
     *
     * @return Fecdas\PartesBundle\Entity\EntityParteType 
     */
    public function getTipus()
    {
        return $this->tipus;
    }

    /**
     * Set club
     *
     * @param Fecdas\PartesBundle\Entity\EntityClub $club
     */
    public function setClub(\Fecdas\PartesBundle\Entity\EntityClub $club)
    {
        $this->club = $club;
    }

    /**
     * Get club
     *
     * @return Fecdas\PartesBundle\Entity\EntityClub 
     */
    public function getClub()
    {
        return $this->club;
    }

    /**
     * Add llicencia
     *
     * @param Fecdas\PartesBundle\Entity\EntityLlicencia $llicencia
     */
    public function addEntityLlicencia(\Fecdas\PartesBundle\Entity\EntityLlicencia $llicencia)
    {
    	$llicencia->setParte($this);
    	$this->llicencies->add($llicencia);
    }

    /**
     * Remove llicencia
     *
     * @param Fecdas\PartesBundle\Entity\EntityLlicencia $llicencia
     */
    public function removeEntityLlicencia(\Fecdas\PartesBundle\Entity\EntityLlicencia $llicencia)
    {
    	$llicencia->setParte();
    	$this->llicencies->removeElement($llicencia);
    }
    
    
    /**
     * Get llicencies
     *
     * @return Doctrine\Common\Collections\ArrayCollection 
     */
    public function getLlicencies()
    {
    	return $this->llicencies;
    }
    
    /**
     * Obté número de llicències (actives)
     *
     * @return integer
     */
    public function getNumLlicencies()
    {
    	
    	// Només si no estan donades de baixa
    	$count = 0;
    	foreach($this->llicencies as $c=>$llicencia_iter) {
    		//$llicencia_iter->setPersonaSelect($llicencia_iter->getPersona());
    		if ($llicencia_iter->getDatabaixa() == null) $count++;
    	}
    	return $count;
    }

    /**
     * Obté número d'aficionats (llicències actives)
     *
     * @return integer
     */
    public function getNumAficionats() {
    	return $this->getNumLlicenciesCategoria('A');
    }
    
    /**
     * Obté número de tècnics (llicències actives)
     *
     * @return integer
     */
    public function getNumTecnics() {
    	return $this->getNumLlicenciesCategoria('T');
    }
    
    /**
     * Obté número de infantils (llicències actives)
     *
     * @return integer
     */
    public function getNumInfantils() {
    	return $this->getNumLlicenciesCategoria('I');
    }
    
    
    private function getNumLlicenciesCategoria($simbol)
    {
    	// Només si no estan donades de baixa
    	$count = 0;
    	foreach($this->llicencies as $c=>$llicencia_iter) {
    		if ($llicencia_iter->getDatabaixa() == null and 
    			$llicencia_iter->getCategoria()->getSimbol() == $simbol) $count++;
    	}
    	return $count;
    }
    
    
    /**
     * Set datamodificacio
     *
     * @param datetime $datamodificacio
     */
    public function setDatamodificacio($datamodificacio)
    {
        $this->datamodificacio = $datamodificacio;
    }

    /**
     * Get datamodificacio
     *
     * @return datetime 
     */
    public function getDatamodificacio()
    {
        return $this->datamodificacio;
    }
    
    /**
     * Set databaixa
     *
     * @param datetime $databaixa
     */
    public function setDatabaixa($databaixa)
    {
    	$this->databaixa = $databaixa;
    }
    
    /**
     * Get databaixa
     *
     * @return datetime
     */
    public function getDatabaixa()
    {
    	return $this->databaixa;
    }
}